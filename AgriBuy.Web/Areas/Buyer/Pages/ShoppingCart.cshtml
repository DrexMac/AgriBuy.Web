@page
@model AgriBuy.Web.Areas.Buyer.Pages.ShoppingCartModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Shopping Cart";
}

<style>
    body, html {
        height: 100%;
        background: linear-gradient(135deg, #81c784 0%, #388e3c 100%);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .cart-card {
        width: 700px;
        border-radius: 10px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        background: white;
        padding: 2rem;
    }

    .cart-header {
        font-weight: 700;
        color: #2e7d32;
        margin-bottom: 1rem;
        text-align: center;
    }

    .table thead {
        background-color: #a5d6a7;
        color: #1b5e20;
    }

    a.back-link {
        color: #2e7d32;
        font-weight: 600;
        text-decoration: none;
        display: inline-block;
        margin-top: 1.5rem;
    }

        a.back-link:hover {
            text-decoration: underline;
        }

    .empty-message {
        text-align: center;
        color: #558b2f;
        font-weight: 600;
        margin: 2rem 0;
    }

    .order-total {
        text-align: right;
        font-weight: 700;
        font-size: 1.25rem;
        color: #2e7d32;
        margin-top: 1rem;
    }

    .checkout-btn, .addorder-btn {
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        border-radius: 6px;
        cursor: pointer;
        float: right;
        margin-top: 1rem;
        margin-left: 0.5rem;
    }

    .checkout-btn {
        background-color: #2e7d32;
    }

        .checkout-btn:hover {
            background-color: #27632a;
        }

    .addorder-btn {
        background-color: #4caf50;
    }

        .addorder-btn:hover {
            background-color: #388e3c;
        }
</style>

<div class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="cart-card">
        <h2 class="cart-header"><i class="bi bi-cart4"></i> Your Shopping Cart</h2>

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="empty-message">@Model.ErrorMessage</div>
        }
        else
        {
            <table class="table table-striped table-bordered align-middle">
                <thead>
                    <tr>
                        <th>Product ID</th>
                        <th>Unit</th>
                        <th>Unit UnitPrice (RM)</th>
                        <th>Quantity</th>
                        <th>Item UnitPrice (RM)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartItems)
                    {
                        <tr>
                            <td>@item.ProductId</td>
                            <td>@item.UnitOfMeasure</td>
                            <td>@item.UnitPrice.ToString("N2")</td>
                            <td>@item.Quantity</td>
                            <td>@item.ItemPrice.ToString("N2")</td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="order-total">
                Total: RM @Model.OrderTotal.ToString("N2")
            </div>

            <form method="post" style="display:inline-block;">
                <button type="submit" class="checkout-btn" asp-page-handler="Checkout">Checkout</button>
            </form>

            <form method="post" asp-page-handler="AddOrder" style="display:inline-block;">
                <button type="submit" class="addorder-btn">Add Order</button>
            </form>
        }

        <a asp-page="/Landing" class="back-link">← Back to Dashboard</a>
    </div>
</div>
